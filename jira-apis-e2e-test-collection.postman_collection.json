{
	"info": {
		"_postman_id": "aa22ea93-d17e-4b47-82e5-91aec65921f5",
		"name": "jira-apis-e2e-test-collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28447185",
		"_collection_link": "https://testleaf-4289.postman.co/workspace/da778a7e-3530-4a06-bbf0-869d6648c347/collection/28447185-aa22ea93-d17e-4b47-82e5-91aec65921f5?action=share&source=collection_link&creator=28447185"
	},
	"item": [
		{
			"name": "create-a-user-story",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"key\", jsonData.key);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userName}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fields\": {\r\n        \"project\": {\r\n            \"id\": \"10003\"\r\n        },\r\n        \"issuetype\": {\r\n            \"id\": \"10013\"\r\n        },\r\n        \"summary\": \"Create new user story for demo mar 2025 batch 1\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{domainName}}.atlassian.net/rest/api/3/issue",
					"protocol": "https",
					"host": [
						"{{domainName}}",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-a-user-story",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Validate the key value in the response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.key).to.eql(pm.collectionVariables.get(\"key\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{domainName}}.atlassian.net/rest/api/3/issue/:issueKey",
					"protocol": "https",
					"host": [
						"{{domainName}}",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueKey"
					],
					"variable": [
						{
							"key": "issueKey",
							"value": "{{key}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update-a-summary-user-story",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fields\": {\r\n        \"description\": {\r\n            \"version\": 1,\r\n            \"type\": \"doc\",\r\n            \"content\": [\r\n                {\r\n                    \"type\": \"paragraph\",\r\n                    \"content\": [\r\n                        {\r\n                            \"type\": \"text\",\r\n                            \"text\": \"Order entry fails when selecting supplier.\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"type\": \"paragraph\",\r\n                    \"content\": [\r\n                        {\r\n                            \"type\": \"text\",\r\n                            \"text\": \"Order entry fails when selecting supplier1.\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"type\": \"paragraph\",\r\n                    \"content\": [\r\n                        {\r\n                            \"type\": \"text\",\r\n                            \"text\": \"Edit issue\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"summary\": \"Update user story for demo mar 2025 batch 1\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{domainName}}.atlassian.net/rest/api/3/issue/:issueKey?returnIssue=true",
					"protocol": "https",
					"host": [
						"{{domainName}}",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueKey"
					],
					"query": [
						{
							"key": "returnIssue",
							"value": "true"
						}
					],
					"variable": [
						{
							"key": "issueKey",
							"value": "{{key}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete-a-user-story",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has No Content\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{domainName}}.atlassian.net/rest/api/3/issue/:issueKey",
					"protocol": "https",
					"host": [
						"{{domainName}}",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueKey"
					],
					"variable": [
						{
							"key": "issueKey",
							"value": "{{key}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "validate_deletion_isSuccess",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has Not Found\", function () {\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{domainName}}.atlassian.net/rest/api/3/issue/:issueKey",
					"protocol": "https",
					"host": [
						"{{domainName}}",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueKey"
					],
					"variable": [
						{
							"key": "issueKey",
							"value": "{{key}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{api_token}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "key",
			"value": ""
		}
	]
}